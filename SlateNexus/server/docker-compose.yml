version: '3.8'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: RMM_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - "5432:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    networks:
      - nexus_network
    ports:
      - "80:80"
      - "443:443"
    #  - "5000:5000"
    volumes:
      - ../dashboard:/usr/share/nginx/html
    # - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - /etc/ssl/Nexus:/etc/ssl/Nexus
    environment:
      - NEXUS_IP=${NEXUS_IP:-172.17.0.1}
      - NEXUS_FQDN=${NEXUS_FQDN:-_}
      - REMOTELY_FQDN=${REMOTELY_FQDN:-remotely.$NEXUS_FQDN}
    command: /bin/bash -c "envsubst '$${NEXUS_FQDN} $${REMOTELY_FQDN}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  remotely:
    image: immybot/remotely:latest
    networks:
      - nexus_network
    # ports:
    #   - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=5000
      - Remotely_ApplicationOptions__DbProvider=SQLite
      - Remotely_ConnectionStrings__SQLite=Data Source=/app/AppData/Remotely.db
      - Remotely_ConnectionStrings__SQLServer=Server=(localdb)\\mssqllocaldb;Database=Remotely-Server-53bc9b9d-9d6a-45d4-8429-2a2761773502;Trusted_Connection=True;MultipleActiveResultSets=true
      - Remotely_ConnectionStrings__PostgreSQL=Server=Host=localhost;Database=Remotely;Username=postgres;
    volumes:
      - /var/www/remotely:/app/AppData

volumes:
  postgres-data:

networks:
  nexus_network:
    driver: bridge